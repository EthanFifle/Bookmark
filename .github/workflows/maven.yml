# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "designPrinciples" ]
  pull_request:
    branches: [ "designPrinciples" ]

jobs:
  build:

    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: GNU & Mac Naming
      if: ${{runner.os != 'Windows'}}
      run: mv target/Bookmark-1.0-SNAPSHOT.jar build_${{runner.os}}.jar; chmod 774 ./build_${{runner.os}}.jar

    - name: Windows Naming
      if: ${{runner.os == 'Windows'}}
      run: Rename-Item -Path ".\target\Bookmark-1.0-SNAPSHOT.jar" -NewName "build_Windows.jar"; Move-Item -Path ./target/build_Windows.jar -Destination ./

    - name: Upload Jar
      uses: actions/upload-artifact@v3
      with:
        name: build_${{runner.os}}
        path: ./build_${{runner.os}}.jar


  release:

      runs-on: ubuntu-latest
      needs: build

      steps:
        - name: Checkout
          uses: actions/checkout@v3

        - uses: actions/download-artifact@v3
          with:
            path: ./

        - name: Give permission
          run: chmod 774 ./build_Linux/build_Linux.jar

        - name: Gen release info
          run: |
            source release.env
            echo "RELEASE_VERSION=$(echo $RELEASE_VERSION | cut -c 1-6)" >> $GITHUB_ENV
            echo "RELEASE_NAME=$(echo $RELEASE_NAME | cut -c 1-6)" >> $GITHUB_ENV
            echo "RELEASE_DESCRIPTION=$(echo $RELEASE_DESCRIPTION | cut -c 1-6)" >> $GITHUB_ENV

        - name: Test env
          run: echo ${{env.RELEASE_VERSION}}

        - name: create tag
          run: git tag ${{env.RELEASE_VERSION}}

        - name: Release
          uses: softprops/action-gh-release@v1
          with:
            files: |
              ./build_Linux/build_Linux.jar
              ./build_Windows/build_Windows.jar
              ./build_macOS/build_macOS.jar
            tag_name: ${{env.RELEASE_VERSION}}
            token: ${{ secrets.GITHUB_TOKEN  }}

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
#     - name: Update dependency graph
#       uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
